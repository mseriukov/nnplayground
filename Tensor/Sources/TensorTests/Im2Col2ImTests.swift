import Testing
@testable import Tensor

@Suite
struct Im2ColTests {
    @Test
    func testIm2ColBasic() throws {
        let a = Tensor(
            storage: [
                 01, 02, 03,
                 04, 05, 06,
                 07, 08, 09,

                 11, 12, 13,
                 14, 15, 16,
                 17, 18, 19,

                 21, 22, 23,
                 24, 25, 26,
                 27, 28, 29,
            ],
            shape: [1, 3, 3, 3]
        )
        let res = try a.im2col(kernelSize: (2, 2))
        #expect(res.shape == [1, 2 * 2 * 3, 2 * 2])
        #expect(Array(res.dataSlice) == [
            01, 02, 04, 05,
            02, 03, 05, 06,
            04, 05, 07, 08,
            05, 06, 08, 09,
            11, 12, 14, 15,
            12, 13, 15, 16,
            14, 15, 17, 18,
            15, 16, 18, 19,
            21, 22, 24, 25,
            22, 23, 25, 26,
            24, 25, 27, 28,
            25, 26, 28, 29
        ])
    }

    @Test
    func testIm2ColBatched() throws {
        let a = Tensor(
            storage: [
                 01, 02, 03,
                 04, 05, 06,
                 07, 08, 09,

                 11, 12, 13,
                 14, 15, 16,
                 17, 18, 19,

                 21, 22, 23,
                 24, 25, 26,
                 27, 28, 29,
            // --------------
                 30, 31, 32,
                 33, 34, 35,
                 36, 37, 38,

                 39, 40, 41,
                 42, 43, 44,
                 45, 46, 47,

                 48, 49, 50,
                 51, 52, 53,
                 54, 55, 56,
            ],
            shape: [2, 3, 3, 3]
        )
        let res = try a.im2col(kernelSize: (2, 2))
        #expect(res.shape == [2, 2 * 2 * 3, 2 * 2])
        #expect(Array(res.dataSlice) == [
            01, 02, 04, 05,
            02, 03, 05, 06,
            04, 05, 07, 08,
            05, 06, 08, 09,
            11, 12, 14, 15,
            12, 13, 15, 16,
            14, 15, 17, 18,
            15, 16, 18, 19,
            21, 22, 24, 25,
            22, 23, 25, 26,
            24, 25, 27, 28,
            25, 26, 28, 29,
        // -----------------
            30, 31, 33, 34,
            31, 32, 34, 35,
            33, 34, 36, 37,
            34, 35, 37, 38,
            39, 40, 42, 43,
            40, 41, 43, 44,
            42, 43, 45, 46,
            43, 44, 46, 47,
            48, 49, 51, 52,
            49, 50, 52, 53,
            51, 52, 54, 55,
            52, 53, 55, 56
        ])
    }

    @Test
    func testIm2ColPadded() throws {
        let a = Tensor(
            storage: [
                 01, 02, 03,
                 04, 05, 06,
                 07, 08, 09,

                 11, 12, 13,
                 14, 15, 16,
                 17, 18, 19,

                 21, 22, 23,
                 24, 25, 26,
                 27, 28, 29,
            ],
            shape: [1, 3, 3, 3]
        )
        let res = try a.im2col(kernelSize: (2, 2), padding: (1, 1))
        #expect(res.shape == [1, 2 * 2 * 3, 4 * 4])
        #expect(Array(res.dataSlice) == [
            00, 00, 00, 00, 00, 01, 02, 03, 00, 04, 05, 06, 00, 07, 08, 09,
            00, 00, 00, 00, 01, 02, 03, 00, 04, 05, 06, 00, 07, 08, 09, 00,
            00, 01, 02, 03, 00, 04, 05, 06, 00, 07, 08, 09, 00, 00, 00, 00,
            01, 02, 03, 00, 04, 05, 06, 00, 07, 08, 09, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 11, 12, 13, 00, 14, 15, 16, 00, 17, 18, 19,
            00, 00, 00, 00, 11, 12, 13, 00, 14, 15, 16, 00, 17, 18, 19, 00,
            00, 11, 12, 13, 00, 14, 15, 16, 00, 17, 18, 19, 00, 00, 00, 00,
            11, 12, 13, 00, 14, 15, 16, 00, 17, 18, 19, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 21, 22, 23, 00, 24, 25, 26, 00, 27, 28, 29,
            00, 00, 00, 00, 21, 22, 23, 00, 24, 25, 26, 00, 27, 28, 29, 00,
            00, 21, 22, 23, 00, 24, 25, 26, 00, 27, 28, 29, 00, 00, 00, 00,
            21, 22, 23, 00, 24, 25, 26, 00, 27, 28, 29, 00, 00, 00, 00, 00
        ])
    }

    @Test
    func testIm2ColStrided() throws {
        let a = Tensor(
            storage: [

                 01, 02, 03, 04,
                 05, 06, 07, 08,
                 09, 10, 11, 12,
                 13, 14, 15, 16,

                 17, 18, 19, 20,
                 21, 22, 23, 24,
                 25, 26, 27, 28,
                 29, 30, 31, 32,

                 33, 34, 35, 36,
                 37, 38, 39, 40,
                 41, 42, 43, 44,
                 45, 46, 47, 48,
            ],
            shape: [1, 3, 4, 4]
        )
        let res = try a.im2col(kernelSize: (2, 2), stride: (2, 2))
        #expect(res.shape == [1, 2 * 2 * 3, 2 * 2])
        #expect(Array(res.dataSlice) == [
            01, 03, 09, 11,
            02, 04, 10, 12,
            05, 07, 13, 15,
            06, 08, 14, 16,
            17, 19, 25, 27,
            18, 20, 26, 28,
            21, 23, 29, 31,
            22, 24, 30, 32,
            33, 35, 41, 43,
            34, 36, 42, 44,
            37, 39, 45, 47,
            38, 40, 46, 48
        ])
    }

    @Test
    func testCol2ImIdentity() throws {
        let a = Tensor(
            storage: [
                01, 02, 03,
                04, 05, 06,
                07, 08, 09,
            ],
            shape: [1, 1, 3, 3]
        )
        let input = try a.im2col(
            kernelSize: (1, 1),
            stride: (1, 1),
            padding: (0, 0),
            dilation: (1, 1)
        )

        let res = input.col2im(
            inputShape: [1, 1, 3, 3],
            kernelSize: (1, 1),
            stride: (1, 1),
            padding: (0, 0),
            dilation: (1, 1)
        )
        #expect(res.shape == [1, 1, 3, 3])
        #expect(Array(res.dataSlice) == [
            01, 02, 03,
            04, 05, 06,
            07, 08, 09,
        ])
    }

    @Test
    func testCol2ImOverlap() throws {
        let a = Tensor(
            storage: [
                01, 02, 03,
                04, 05, 06,
                07, 08, 09,
            ],
            shape: [1, 1, 3, 3]
        )
        let input = try a.im2col(
            kernelSize: (2, 2),
            stride: (1, 1),
            padding: (0, 0),
            dilation: (1, 1)
        )

        let res = input.col2im(
            inputShape: [1, 1, 3, 3],
            kernelSize: (2, 2),
            stride: (1, 1),
            padding: (0, 0),
            dilation: (1, 1)
        )
        #expect(res.shape == [1, 1, 3, 3])
        #expect(Array(res.dataSlice) == [
            01, 04, 03,
            08, 20, 12,
            07, 16, 09,
        ])
    }
}
